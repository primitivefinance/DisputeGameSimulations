pub use mips::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types,
)]
pub mod mips {
    #[allow(deprecated)]
    fn __abi() -> ::ethers::core::abi::Abi {
        ::ethers::core::abi::ethabi::Contract {
            constructor: ::core::option::Option::Some(::ethers::core::abi::ethabi::Constructor {
                inputs: ::std::vec![
                    ::ethers::core::abi::ethabi::Param {
                        name: ::std::borrow::ToOwned::to_owned("_oracle"),
                        kind: ::ethers::core::abi::ethabi::ParamType::Address,
                        internal_type: ::core::option::Option::Some(
                            ::std::borrow::ToOwned::to_owned("contract IPreimageOracle"),
                        ),
                    },
                ],
            }),
            functions: ::core::convert::From::from([
                (
                    ::std::borrow::ToOwned::to_owned("BRK_START"),
                    ::std::vec![
                        ::ethers::core::abi::ethabi::Function {
                            name: ::std::borrow::ToOwned::to_owned("BRK_START"),
                            inputs: ::std::vec![],
                            outputs: ::std::vec![
                                ::ethers::core::abi::ethabi::Param {
                                    name: ::std::string::String::new(),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Uint(32usize),
                                    internal_type: ::core::option::Option::Some(
                                        ::std::borrow::ToOwned::to_owned("uint32"),
                                    ),
                                },
                            ],
                            constant: ::core::option::Option::None,
                            state_mutability: ::ethers::core::abi::ethabi::StateMutability::View,
                        },
                    ],
                ),
                (
                    ::std::borrow::ToOwned::to_owned("oracle"),
                    ::std::vec![
                        ::ethers::core::abi::ethabi::Function {
                            name: ::std::borrow::ToOwned::to_owned("oracle"),
                            inputs: ::std::vec![],
                            outputs: ::std::vec![
                                ::ethers::core::abi::ethabi::Param {
                                    name: ::std::borrow::ToOwned::to_owned("oracle_"),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Address,
                                    internal_type: ::core::option::Option::Some(
                                        ::std::borrow::ToOwned::to_owned("contract IPreimageOracle"),
                                    ),
                                },
                            ],
                            constant: ::core::option::Option::None,
                            state_mutability: ::ethers::core::abi::ethabi::StateMutability::View,
                        },
                    ],
                ),
                (
                    ::std::borrow::ToOwned::to_owned("step"),
                    ::std::vec![
                        ::ethers::core::abi::ethabi::Function {
                            name: ::std::borrow::ToOwned::to_owned("step"),
                            inputs: ::std::vec![
                                ::ethers::core::abi::ethabi::Param {
                                    name: ::std::borrow::ToOwned::to_owned("stateData"),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Bytes,
                                    internal_type: ::core::option::Option::Some(
                                        ::std::borrow::ToOwned::to_owned("bytes"),
                                    ),
                                },
                                ::ethers::core::abi::ethabi::Param {
                                    name: ::std::borrow::ToOwned::to_owned("proof"),
                                    kind: ::ethers::core::abi::ethabi::ParamType::Bytes,
                                    internal_type: ::core::option::Option::Some(
                                        ::std::borrow::ToOwned::to_owned("bytes"),
                                    ),
                                },
                            ],
                            outputs: ::std::vec![
                                ::ethers::core::abi::ethabi::Param {
                                    name: ::std::string::String::new(),
                                    kind: ::ethers::core::abi::ethabi::ParamType::FixedBytes(
                                        32usize,
                                    ),
                                    internal_type: ::core::option::Option::Some(
                                        ::std::borrow::ToOwned::to_owned("bytes32"),
                                    ),
                                },
                            ],
                            constant: ::core::option::Option::None,
                            state_mutability: ::ethers::core::abi::ethabi::StateMutability::NonPayable,
                        },
                    ],
                ),
            ]),
            events: ::std::collections::BTreeMap::new(),
            errors: ::std::collections::BTreeMap::new(),
            receive: false,
            fallback: false,
        }
    }
    ///The parsed JSON ABI of the contract.
    pub static MIPS_ABI: ::ethers::contract::Lazy<::ethers::core::abi::Abi> = ::ethers::contract::Lazy::new(
        __abi,
    );
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = b"`\xA0`@R4\x80\x15a\0\x10W`\0\x80\xFD[P`@Qa\x1E\xB28\x03\x80a\x1E\xB2\x839\x81\x01`@\x81\x90Ra\0/\x91a\0@V[`\x01`\x01`\xA0\x1B\x03\x16`\x80Ra\0pV[`\0` \x82\x84\x03\x12\x15a\0RW`\0\x80\xFD[\x81Q`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14a\0iW`\0\x80\xFD[\x93\x92PPPV[`\x80Qa\x1E!a\0\x91`\09`\0\x81\x81`\x85\x01Ra\x15\xE7\x01Ra\x1E!`\0\xF3\xFE`\x80`@R4\x80\x15a\0\x10W`\0\x80\xFD[P`\x046\x10a\0AW`\x005`\xE0\x1C\x80c\x15V3\xFE\x14a\0FW\x80c}\xC0\xD1\xD0\x14a\0kW\x80c\xF8\xE0\xCB\x96\x14a\0\xAFW[`\0\x80\xFD[a\0Qc@\0\0\0\x81V[`@Qc\xFF\xFF\xFF\xFF\x90\x91\x16\x81R` \x01[`@Q\x80\x91\x03\x90\xF3[`@Qs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x7F\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x16\x81R` \x01a\0bV[a\0\xC2a\0\xBD6`\x04a\x1D&V[a\0\xD0V[`@Q\x90\x81R` \x01a\0bV[`\0a\0\xDAa\x1CSV[`\x80\x81\x14a\0\xE7W`\0\x80\xFD[`@Qa\x06\0\x14a\0\xF7W`\0\x80\xFD[`d\x86\x14a\x01\x04W`\0\x80\xFD[a\x01\x84\x84\x14a\x01\x12W`\0\x80\xFD[\x855`\x80R` \x86\x015`\xA0R`@\x86\x015`\xE0\x90\x81\x1C`\xC0\x90\x81R`D\x88\x015\x82\x1C\x82R`H\x88\x015\x82\x1Ca\x01\0R`L\x88\x015\x82\x1Ca\x01 R`P\x88\x015\x82\x1Ca\x01@R`T\x88\x015\x90\x91\x1Ca\x01`R`X\x87\x015`\xF8\x90\x81\x1Ca\x01\x80R`Y\x88\x015\x90\x1Ca\x01\xA0R`Z\x87\x015\x90\x1Ca\x01\xC0Ra\x02\0a\x01\xE0\x81\x90R`b\x87\x01\x90`\0[` \x81\x10\x15a\x01\xBDW\x825`\xE0\x1C\x82R`\x04\x90\x92\x01\x91` \x90\x91\x01\x90`\x01\x01a\x01\x99V[PPP\x80a\x01 \x01Q\x15a\x01\xDBWa\x01\xD3a\x06\x19V[\x91PPa\x06\x11V[a\x01@\x81\x01\x80Q`\x01\x01g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16\x90R``\x81\x01Q`\0\x90a\x02\x03\x90\x82a\x075V[\x90P`?`\x1A\x82\x90\x1C\x16`\x02\x81\x14\x80a\x02\"WP\x80c\xFF\xFF\xFF\xFF\x16`\x03\x14[\x15a\x02wW`\0`\x02\x83c\x03\xFF\xFF\xFF\x16c\xFF\xFF\xFF\xFF\x16\x90\x1B\x84`\x80\x01Qc\xF0\0\0\0\x16\x17\x90Pa\x02l\x82c\xFF\xFF\xFF\xFF\x16`\x02\x14a\x02`W`\x1Fa\x02cV[`\0[`\xFF\x16\x82a\x07\xF1V[\x94PPPPPa\x06\x11V[a\x01`\x83\x01Q`\0\x90\x81\x90`\x1F`\x10\x86\x90\x1C\x81\x16\x91\x90`\x15\x87\x90\x1C\x16` \x81\x10a\x02\xA3Wa\x02\xA3a\x1D\x92V[` \x02\x01Q\x92P\x80c\xFF\xFF\xFF\xFF\x85\x16\x15\x80a\x02\xC4WP\x84c\xFF\xFF\xFF\xFF\x16`\x1C\x14[\x15a\x02\xFBW\x86a\x01`\x01Q\x82c\xFF\xFF\xFF\xFF\x16` \x81\x10a\x02\xE6Wa\x02\xE6a\x1D\x92V[` \x02\x01Q\x92PP`\x1F`\x0B\x86\x90\x1C\x16a\x03\xB7V[` \x85c\xFF\xFF\xFF\xFF\x16\x10\x15a\x03]W\x84c\xFF\xFF\xFF\xFF\x16`\x0C\x14\x80a\x03%WP\x84c\xFF\xFF\xFF\xFF\x16`\r\x14[\x80a\x036WP\x84c\xFF\xFF\xFF\xFF\x16`\x0E\x14[\x15a\x03GW\x85a\xFF\xFF\x16\x92Pa\x03\xB7V[a\x03V\x86a\xFF\xFF\x16`\x10a\x08\xEBV[\x92Pa\x03\xB7V[`(\x85c\xFF\xFF\xFF\xFF\x16\x10\x15\x80a\x03yWP\x84c\xFF\xFF\xFF\xFF\x16`\"\x14[\x80a\x03\x8AWP\x84c\xFF\xFF\xFF\xFF\x16`&\x14[\x15a\x03\xB7W\x86a\x01`\x01Q\x82c\xFF\xFF\xFF\xFF\x16` \x81\x10a\x03\xACWa\x03\xACa\x1D\x92V[` \x02\x01Q\x92P\x81\x90P[`\x04\x85c\xFF\xFF\xFF\xFF\x16\x10\x15\x80\x15a\x03\xD4WP`\x08\x85c\xFF\xFF\xFF\xFF\x16\x10[\x80a\x03\xE5WP\x84c\xFF\xFF\xFF\xFF\x16`\x01\x14[\x15a\x04\x04Wa\x03\xF6\x85\x87\x84\x87a\t^V[\x97PPPPPPPPa\x06\x11V[c\xFF\xFF\xFF\xFF`\0` \x87\x83\x16\x10a\x04iWa\x04$\x88a\xFF\xFF\x16`\x10a\x08\xEBV[\x90\x95\x01\x94c\xFF\xFF\xFF\xFC\x86\x16a\x04:\x81`\x01a\x075V[\x91P`(\x88c\xFF\xFF\xFF\xFF\x16\x10\x15\x80\x15a\x04ZWP\x87c\xFF\xFF\xFF\xFF\x16`0\x14\x15[\x15a\x04gW\x80\x92P`\0\x93P[P[`\0a\x04w\x89\x88\x88\x85a\x0BnV[c\xFF\xFF\xFF\xFF\x90\x81\x16\x91P`?\x8A\x16\x90\x89\x16\x15\x80\x15a\x04\x9CWP`\x08\x81c\xFF\xFF\xFF\xFF\x16\x10\x15[\x80\x15a\x04\xAEWP`\x1C\x81c\xFF\xFF\xFF\xFF\x16\x10[\x15a\x05\x8AW\x80c\xFF\xFF\xFF\xFF\x16`\x08\x14\x80a\x04\xCEWP\x80c\xFF\xFF\xFF\xFF\x16`\t\x14[\x15a\x05\x05Wa\x04\xF3\x81c\xFF\xFF\xFF\xFF\x16`\x08\x14a\x04\xEAW\x85a\x04\xEDV[`\0[\x89a\x07\xF1V[\x9BPPPPPPPPPPPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\n\x03a\x05%Wa\x04\xF3\x85\x89c\xFF\xFF\xFF\xFF\x8A\x16\x15a\x12\xF2V[\x80c\xFF\xFF\xFF\xFF\x16`\x0B\x03a\x05FWa\x04\xF3\x85\x89c\xFF\xFF\xFF\xFF\x8A\x16\x15\x15a\x12\xF2V[\x80c\xFF\xFF\xFF\xFF\x16`\x0C\x03a\x05\\Wa\x04\xF3a\x13\xD8V[`\x10\x81c\xFF\xFF\xFF\xFF\x16\x10\x15\x80\x15a\x05yWP`\x1C\x81c\xFF\xFF\xFF\xFF\x16\x10[\x15a\x05\x8AWa\x04\xF3\x81\x89\x89\x88a\x19\x0CV[\x88c\xFF\xFF\xFF\xFF\x16`8\x14\x80\x15a\x05\xA5WPc\xFF\xFF\xFF\xFF\x86\x16\x15\x15[\x15a\x05\xDAW`\x01\x8Ba\x01`\x01Q\x87c\xFF\xFF\xFF\xFF\x16` \x81\x10a\x05\xC9Wa\x05\xC9a\x1D\x92V[c\xFF\xFF\xFF\xFF\x90\x92\x16` \x92\x90\x92\x02\x01R[\x83c\xFF\xFF\xFF\xFF\x16c\xFF\xFF\xFF\xFF\x14a\x05\xF7Wa\x05\xF7\x84`\x01\x84a\x1B\x06V[a\x06\x03\x85\x83`\x01a\x12\xF2V[\x9BPPPPPPPPPPPP[\x94\x93PPPPV[`@\x80Q`\x80Q\x81R`\xA0Q` \x82\x01R`\xDCQ\x91\x81\x01\x91\x90\x91R`\xFCQ`D\x82\x01Ra\x01\x1CQ`H\x82\x01Ra\x01<Q`L\x82\x01Ra\x01\\Q`P\x82\x01Ra\x01|Q`T\x82\x01Ra\x01\x80Qa\x01\x9FQ`X\x83\x01Ra\x01\xA0Qa\x01\xBFQ`Y\x84\x01Ra\x01\xD8Q`Z\x84\x01R`\0\x92a\x02\0\x92\x90\x91`b\x83\x01\x91\x90\x85[` \x81\x10\x15a\x06\xB8W`\x1C\x86\x01Q\x84R` \x90\x95\x01\x94`\x04\x90\x93\x01\x92`\x01\x01a\x06\x94V[P`\0\x83R\x83\x83\x03\x84\xA0`\0\x94P\x80`\x01\x81\x14a\x06\xD8W`\x03\x95Pa\x07\0V[\x82\x80\x15a\x06\xF0W`\x01\x81\x14a\x06\xF9W`\x02\x96Pa\x06\xFEV[`\0\x96Pa\x06\xFEV[`\x01\x96P[P[PPP\x81\x90\x03\x90 ~\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16`\xF8\x91\x90\x91\x1B\x17\x91\x90PV[`\0\x80a\x07A\x83a\x1B\xAAV[\x90P`\x03\x84\x16\x15a\x07QW`\0\x80\xFD[` \x81\x01\x905\x84`\x05\x1C\x81`\0[`\x1B\x81\x10\x15a\x07\xB7W` \x85\x01\x945\x83\x82\x1C`\x01\x16\x80\x15a\x07\x87W`\x01\x81\x14a\x07\x9CWa\x07\xADV[`\0\x84\x81R` \x83\x90R`@\x90 \x93Pa\x07\xADV[`\0\x82\x81R` \x85\x90R`@\x90 \x93P[PP`\x01\x01a\x07_V[P`\x80Q\x91P\x81\x81\x14a\x07\xD2Wc\x0B\xAD\xF0\r`\0R` `\0\xFD[PP`\x1F\x94\x90\x94\x16`\x1C\x03`\x03\x1B\x93\x90\x93\x1Cc\xFF\xFF\xFF\xFF\x16\x93\x92PPPV[`\0a\x07\xFBa\x1CSV[`\x80\x90P\x80``\x01Q`\x04\x01c\xFF\xFF\xFF\xFF\x16\x81`\x80\x01Qc\xFF\xFF\xFF\xFF\x16\x14a\x08\x84W`@Q\x7F\x08\xC3y\xA0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` `\x04\x82\x01R`\x12`$\x82\x01R\x7Fjump in delay slot\0\0\0\0\0\0\0\0\0\0\0\0\0\0`D\x82\x01R`d\x01[`@Q\x80\x91\x03\x90\xFD[``\x81\x01\x80Q`\x80\x83\x01\x80Qc\xFF\xFF\xFF\xFF\x90\x81\x16\x90\x93R\x85\x83\x16\x90R\x90\x85\x16\x15a\x08\xDAW\x80`\x08\x01\x82a\x01`\x01Q\x86c\xFF\xFF\xFF\xFF\x16` \x81\x10a\x08\xC9Wa\x08\xC9a\x1D\x92V[c\xFF\xFF\xFF\xFF\x90\x92\x16` \x92\x90\x92\x02\x01R[a\x08\xE2a\x06\x19V[\x95\x94PPPPPV[`\0c\xFF\xFF\xFF\xFF\x83\x81\x16\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\x85\x01\x83\x16\x91\x90\x91\x1C\x82\x16\x15\x15\x91`\x01` \x86\x90\x03\x82\x16\x81\x90\x1B\x83\x01\x91\x86\x16\x91\x82\x1B\x92\x91\x1B\x01\x82a\tHW`\0a\tJV[\x81[\x90\x86\x16c\xFF\xFF\xFF\xFF\x16\x17\x92PPP\x92\x91PPV[`\0a\tha\x1CSV[`\x80\x90P`\0\x81``\x01Q`\x04\x01c\xFF\xFF\xFF\xFF\x16\x82`\x80\x01Qc\xFF\xFF\xFF\xFF\x16\x14a\t\xEEW`@Q\x7F\x08\xC3y\xA0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` `\x04\x82\x01R`\x14`$\x82\x01R\x7Fbranch in delay slot\0\0\0\0\0\0\0\0\0\0\0\0`D\x82\x01R`d\x01a\x08{V[\x86c\xFF\xFF\xFF\xFF\x16`\x04\x14\x80a\n\tWP\x86c\xFF\xFF\xFF\xFF\x16`\x05\x14[\x15a\n\x85W`\0\x82a\x01`\x01Q\x86c\xFF\xFF\xFF\xFF\x16` \x81\x10a\n-Wa\n-a\x1D\x92V[` \x02\x01Q\x90P\x80c\xFF\xFF\xFF\xFF\x16\x85c\xFF\xFF\xFF\xFF\x16\x14\x80\x15a\nUWP\x87c\xFF\xFF\xFF\xFF\x16`\x04\x14[\x80a\n}WP\x80c\xFF\xFF\xFF\xFF\x16\x85c\xFF\xFF\xFF\xFF\x16\x14\x15\x80\x15a\n}WP\x87c\xFF\xFF\xFF\xFF\x16`\x05\x14[\x91PPa\x0B\x02V[\x86c\xFF\xFF\xFF\xFF\x16`\x06\x03a\n\xA2W`\0\x84`\x03\x0B\x13\x15\x90Pa\x0B\x02V[\x86c\xFF\xFF\xFF\xFF\x16`\x07\x03a\n\xBEW`\0\x84`\x03\x0B\x13\x90Pa\x0B\x02V[\x86c\xFF\xFF\xFF\xFF\x16`\x01\x03a\x0B\x02W`\x1F`\x10\x87\x90\x1C\x16`\0\x81\x90\x03a\n\xE7W`\0\x85`\x03\x0B\x12\x91P[\x80c\xFF\xFF\xFF\xFF\x16`\x01\x03a\x0B\0W`\0\x85`\x03\x0B\x12\x15\x91P[P[``\x82\x01\x80Q`\x80\x84\x01Qc\xFF\xFF\xFF\xFF\x16\x90\x91R\x81\x15a\x0BHW`\x02a\x0B-\x88a\xFF\xFF\x16`\x10a\x08\xEBV[c\xFF\xFF\xFF\xFF\x90\x81\x16\x90\x91\x1B\x82\x01`\x04\x01\x16`\x80\x84\x01Ra\x0BZV[`\x80\x83\x01\x80Q`\x04\x01c\xFF\xFF\xFF\xFF\x16\x90R[a\x0Bba\x06\x19V[\x98\x97PPPPPPPPV[`\0`?`\x1A\x86\x90\x1C\x16\x80\x15\x80a\x0B\x9DWP`\x08\x81c\xFF\xFF\xFF\xFF\x16\x10\x15\x80\x15a\x0B\x9DWP`\x0F\x81c\xFF\xFF\xFF\xFF\x16\x10[\x15a\x0F\xF3W`?\x86\x16\x81`\x08\x81\x14a\x0B\xE4W`\t\x81\x14a\x0B\xEDW`\n\x81\x14a\x0B\xF6W`\x0B\x81\x14a\x0B\xFFW`\x0C\x81\x14a\x0C\x08W`\r\x81\x14a\x0C\x11W`\x0E\x81\x14a\x0C\x1AWa\x0C\x1FV[` \x91Pa\x0C\x1FV[`!\x91Pa\x0C\x1FV[`*\x91Pa\x0C\x1FV[`+\x91Pa\x0C\x1FV[`$\x91Pa\x0C\x1FV[`%\x91Pa\x0C\x1FV[`&\x91P[P\x80c\xFF\xFF\xFF\xFF\x16`\0\x03a\x0CFWPPPc\xFF\xFF\xFF\xFF\x82\x16`\x1F`\x06\x86\x90\x1C\x16\x1Ba\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x02\x03a\x0ClWPPPc\xFF\xFF\xFF\xFF\x82\x16`\x1F`\x06\x86\x90\x1C\x16\x1Ca\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x03\x03a\x0C\xA2W`\x1F`\x06\x88\x90\x1C\x16a\x0C\x98c\xFF\xFF\xFF\xFF\x87\x16\x82\x1C` \x83\x90\x03a\x08\xEBV[\x93PPPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x04\x03a\x0C\xC4WPPPc\xFF\xFF\xFF\xFF\x82\x16`\x1F\x84\x16\x1Ba\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x06\x03a\x0C\xE6WPPPc\xFF\xFF\xFF\xFF\x82\x16`\x1F\x84\x16\x1Ca\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x07\x03a\r\x19Wa\r\x10\x86c\xFF\xFF\xFF\xFF\x16\x86c\xFF\xFF\xFF\xFF\x16\x90\x1C\x87` \x03a\x08\xEBV[\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x08\x03a\r1W\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\t\x03a\rIW\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\n\x03a\raW\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x0B\x03a\ryW\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x0C\x03a\r\x91W\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x0F\x03a\r\xA9W\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x10\x03a\r\xC1W\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x11\x03a\r\xD9W\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x12\x03a\r\xF1W\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x13\x03a\x0E\tW\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x18\x03a\x0E!W\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x19\x03a\x0E9W\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x1A\x03a\x0EQW\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x1B\x03a\x0EiW\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16` \x03a\x0E\x82WPPP\x82\x82\x01a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`!\x03a\x0E\x9BWPPP\x82\x82\x01a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\"\x03a\x0E\xB4WPPP\x81\x83\x03a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`#\x03a\x0E\xCDWPPP\x81\x83\x03a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`$\x03a\x0E\xE6WPPP\x82\x82\x16a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`%\x03a\x0E\xFFWPPP\x82\x82\x17a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`&\x03a\x0F\x18WPPP\x82\x82\x18a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`'\x03a\x0F2WPPP\x82\x82\x17\x19a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`*\x03a\x0FcW\x84`\x03\x0B\x86`\x03\x0B\x12a\x0FTW`\0a\x0FWV[`\x01[`\xFF\x16\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`+\x03a\x0F\x8BW\x84c\xFF\xFF\xFF\xFF\x16\x86c\xFF\xFF\xFF\xFF\x16\x10a\x0FTW`\0a\x0FWV[`@Q\x7F\x08\xC3y\xA0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` `\x04\x82\x01R`\x13`$\x82\x01R\x7Finvalid instruction\0\0\0\0\0\0\0\0\0\0\0\0\0`D\x82\x01R`d\x01a\x08{V[Pa\x0F\x8BV[\x80c\xFF\xFF\xFF\xFF\x16`\x1C\x03a\x10wW`?\x86\x16`\x02\x81\x90\x03a\x10\x19WPPP\x82\x82\x02a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16` \x14\x80a\x104WP\x80c\xFF\xFF\xFF\xFF\x16`!\x14[\x15a\x0F\xEDW\x80c\xFF\xFF\xFF\xFF\x16` \x03a\x10KW\x94\x19\x94[`\0[c\x80\0\0\0\x87\x16\x15a\x10mWd\x01\xFF\xFF\xFF\xFE`\x01\x97\x88\x1B\x16\x96\x01a\x10NV[\x92Pa\x06\x11\x91PPV[\x80c\xFF\xFF\xFF\xFF\x16`\x0F\x03a\x10\x99WPPe\xFF\xFF\xFF\xFF\0\0`\x10\x83\x90\x1B\x16a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16` \x03a\x10\xCDWa\x01\xD3\x85`\x03\x16`\x08\x02`\x18\x03c\xFF\xFF\xFF\xFF\x16\x84c\xFF\xFF\xFF\xFF\x16\x90\x1C`\xFF\x16`\x08a\x08\xEBV[\x80c\xFF\xFF\xFF\xFF\x16`!\x03a\x11\x02Wa\x01\xD3\x85`\x02\x16`\x08\x02`\x10\x03c\xFF\xFF\xFF\xFF\x16\x84c\xFF\xFF\xFF\xFF\x16\x90\x1Ca\xFF\xFF\x16`\x10a\x08\xEBV[\x80c\xFF\xFF\xFF\xFF\x16`\"\x03a\x111WPPc\xFF\xFF\xFF\xFF`\x08`\x03\x85\x16\x02\x81\x16\x81\x81\x1B\x19\x84\x16\x91\x83\x16\x90\x1B\x17a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`#\x03a\x11HW\x82\x91PPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`$\x03a\x11zW\x84`\x03\x16`\x08\x02`\x18\x03c\xFF\xFF\xFF\xFF\x16\x83c\xFF\xFF\xFF\xFF\x16\x90\x1C`\xFF\x16\x91PPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`%\x03a\x11\xADW\x84`\x02\x16`\x08\x02`\x10\x03c\xFF\xFF\xFF\xFF\x16\x83c\xFF\xFF\xFF\xFF\x16\x90\x1Ca\xFF\xFF\x16\x91PPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`&\x03a\x11\xDFWPPc\xFF\xFF\xFF\xFF`\x08`\x03\x85\x16\x02`\x18\x03\x81\x16\x81\x81\x1C\x19\x84\x16\x91\x83\x16\x90\x1C\x17a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`(\x03a\x12\x15WPP`\xFFc\xFF\xFF\xFF\xFF`\x08`\x03\x86\x16\x02`\x18\x03\x81\x16\x82\x81\x1B\x90\x91\x18\x83\x16\x91\x84\x16\x90\x1B\x17a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`)\x03a\x12LWPPa\xFF\xFFc\xFF\xFF\xFF\xFF`\x08`\x02\x86\x16\x02`\x10\x03\x81\x16\x82\x81\x1B\x90\x91\x18\x83\x16\x91\x84\x16\x90\x1B\x17a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`*\x03a\x12{WPPc\xFF\xFF\xFF\xFF`\x08`\x03\x85\x16\x02\x81\x16\x81\x81\x1C\x19\x83\x16\x91\x84\x16\x90\x1C\x17a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`+\x03a\x12\x92W\x83\x91PPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`.\x03a\x12\xC4WPPc\xFF\xFF\xFF\xFF`\x08`\x03\x85\x16\x02`\x18\x03\x81\x16\x81\x81\x1B\x19\x83\x16\x91\x84\x16\x90\x1B\x17a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`0\x03a\x12\xDBW\x82\x91PPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`8\x03a\x0F\x8BW\x83\x91PPa\x06\x11V[`\0a\x12\xFCa\x1CSV[P`\x80` c\xFF\xFF\xFF\xFF\x86\x16\x10a\x13oW`@Q\x7F\x08\xC3y\xA0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` `\x04\x82\x01R`\x0E`$\x82\x01R\x7Fvalid register\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`D\x82\x01R`d\x01a\x08{V[c\xFF\xFF\xFF\xFF\x85\x16\x15\x80\x15\x90a\x13\x81WP\x82[\x15a\x13\xB5W\x83\x81a\x01`\x01Q\x86c\xFF\xFF\xFF\xFF\x16` \x81\x10a\x13\xA4Wa\x13\xA4a\x1D\x92V[c\xFF\xFF\xFF\xFF\x90\x92\x16` \x92\x90\x92\x02\x01R[`\x80\x81\x01\x80Qc\xFF\xFF\xFF\xFF\x80\x82\x16``\x85\x01R`\x04\x90\x91\x01\x16\x90Ra\x08\xE2a\x06\x19V[`\0a\x13\xE2a\x1CSV[Pa\x01\xE0Q`@\x81\x01Q`\x80\x80\x83\x01Q`\xA0\x84\x01Q`\xC0\x90\x94\x01Q\x91\x93`\0\x92\x83\x92\x91\x90c\xFF\xFF\xFF\xFF\x86\x16a\x0F\xFA\x03a\x14\\W\x81a\x0F\xFF\x81\x16\x15a\x14+Wa\x0F\xFF\x81\x16a\x10\0\x03\x01[\x83c\xFF\xFF\xFF\xFF\x16`\0\x03a\x14RW`\xE0\x88\x01\x80Qc\xFF\xFF\xFF\xFF\x83\x82\x01\x16\x90\x91R\x95Pa\x14VV[\x83\x95P[Pa\x18\xCBV[\x85c\xFF\xFF\xFF\xFF\x16a\x0F\xCD\x03a\x14wWc@\0\0\0\x94Pa\x18\xCBV[\x85c\xFF\xFF\xFF\xFF\x16a\x10\x18\x03a\x14\x8FW`\x01\x94Pa\x18\xCBV[\x85c\xFF\xFF\xFF\xFF\x16a\x10\x96\x03a\x14\xC4W`\x01a\x01 \x88\x01R`\xFF\x83\x16a\x01\0\x88\x01Ra\x14\xB8a\x06\x19V[\x97PPPPPPPP\x90V[\x85c\xFF\xFF\xFF\xFF\x16a\x0F\xA3\x03a\x17.Wc\xFF\xFF\xFF\xFF\x83\x16\x15a\x18\xCBW\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFBc\xFF\xFF\xFF\xFF\x84\x16\x01a\x16\xE8W`\0a\x15\x1F\x83c\xFF\xFF\xFF\xFC\x16`\x01a\x075V[` \x89\x01Q\x90\x91P\x80`\0\x1A`\x01\x03a\x15\x8CWa\x15\x89\x81`\0\x90\x81R3` R`@\x90 ~\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16\x7F\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x17\x90V[\x90P[`@\x80\x8A\x01Q\x90Q\x7F\xE01\x10\xE1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`\x04\x81\x01\x83\x90Rc\xFF\xFF\xFF\xFF\x90\x91\x16`$\x82\x01R`\0\x90\x81\x90s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x7F\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x16\x90c\xE01\x10\xE1\x90`D\x01`@\x80Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x16-W=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x16Q\x91\x90a\x1D\xC1V[\x91P\x91P`\x03\x86\x16\x80`\x04\x03\x82\x81\x10\x15a\x16iW\x80\x92P[P\x81\x86\x10\x15a\x16vW\x85\x91P[\x82`\x08\x83\x02a\x01\0\x03\x1C\x92P\x82`\x08\x82\x84`\x04\x03\x03\x02\x1B\x92P`\x01\x80`\x08\x83`\x04\x03\x02\x1B\x03`\x01\x80`\x08\x85\x85`\x04\x03\x03\x02\x1B\x03\x91P\x81\x19\x81\x16\x90P\x83\x81\x19\x87\x16\x17\x95PPPa\x16\xCD\x86c\xFF\xFF\xFF\xFC\x16`\x01\x86a\x1B\x06V[`@\x8B\x01\x80Q\x82\x01c\xFF\xFF\xFF\xFF\x16\x90R\x97Pa\x17)\x92PPPV[\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFDc\xFF\xFF\xFF\xFF\x84\x16\x01a\x17\x1DW\x80\x94Pa\x18\xCBV[c\xFF\xFF\xFF\xFF\x94P`\t\x93P[a\x18\xCBV[\x85c\xFF\xFF\xFF\xFF\x16a\x0F\xA4\x03a\x18\x1FWc\xFF\xFF\xFF\xFF\x83\x16`\x01\x14\x80a\x17XWPc\xFF\xFF\xFF\xFF\x83\x16`\x02\x14[\x80a\x17iWPc\xFF\xFF\xFF\xFF\x83\x16`\x04\x14[\x15a\x17vW\x80\x94Pa\x18\xCBV[\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFAc\xFF\xFF\xFF\xFF\x84\x16\x01a\x17\x1DW`\0a\x17\xB6\x83c\xFF\xFF\xFF\xFC\x16`\x01a\x075V[` \x89\x01Q\x90\x91P`\x03\x84\x16`\x04\x03\x83\x81\x10\x15a\x17\xD1W\x80\x93P[\x83\x90\x03`\x08\x90\x81\x02\x92\x90\x92\x1C\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF`\x01\x93\x85\x02\x93\x84\x1B\x01\x16\x91\x1B\x17` \x88\x01R`\0`@\x88\x01R\x93P\x83a\x18\xCBV[\x85c\xFF\xFF\xFF\xFF\x16a\x0F\xD7\x03a\x18\xCBW\x81c\xFF\xFF\xFF\xFF\x16`\x03\x03a\x18\xBFWc\xFF\xFF\xFF\xFF\x83\x16\x15\x80a\x18UWPc\xFF\xFF\xFF\xFF\x83\x16`\x05\x14[\x80a\x18fWPc\xFF\xFF\xFF\xFF\x83\x16`\x03\x14[\x15a\x18tW`\0\x94Pa\x18\xCBV[c\xFF\xFF\xFF\xFF\x83\x16`\x01\x14\x80a\x18\x8FWPc\xFF\xFF\xFF\xFF\x83\x16`\x02\x14[\x80a\x18\xA0WPc\xFF\xFF\xFF\xFF\x83\x16`\x06\x14[\x80a\x18\xB1WPc\xFF\xFF\xFF\xFF\x83\x16`\x04\x14[\x15a\x17\x1DW`\x01\x94Pa\x18\xCBV[c\xFF\xFF\xFF\xFF\x94P`\x16\x93P[a\x01`\x87\x01\x80Qc\xFF\xFF\xFF\xFF\x80\x88\x16`@\x90\x92\x01\x91\x90\x91R\x90Q\x85\x82\x16`\xE0\x90\x91\x01R`\x80\x88\x01\x80Q\x80\x83\x16``\x8B\x01R`\x04\x01\x90\x91\x16\x90Ra\x14\xB8a\x06\x19V[`\0a\x19\x16a\x1CSV[P`\x80`\0c\xFF\xFF\xFF\xFF\x87\x16`\x10\x03a\x194WP`\xC0\x81\x01Qa\x1A\x9DV[\x86c\xFF\xFF\xFF\xFF\x16`\x11\x03a\x19SWc\xFF\xFF\xFF\xFF\x86\x16`\xC0\x83\x01Ra\x1A\x9DV[\x86c\xFF\xFF\xFF\xFF\x16`\x12\x03a\x19lWP`\xA0\x81\x01Qa\x1A\x9DV[\x86c\xFF\xFF\xFF\xFF\x16`\x13\x03a\x19\x8BWc\xFF\xFF\xFF\xFF\x86\x16`\xA0\x83\x01Ra\x1A\x9DV[\x86c\xFF\xFF\xFF\xFF\x16`\x18\x03a\x19\xBFWc\xFF\xFF\xFF\xFF`\x03\x87\x81\x0B\x90\x87\x90\x0B\x02` \x81\x90\x1C\x82\x16`\xC0\x85\x01R\x16`\xA0\x83\x01Ra\x1A\x9DV[\x86c\xFF\xFF\xFF\xFF\x16`\x19\x03a\x19\xF0Wc\xFF\xFF\xFF\xFF\x86\x81\x16\x81\x87\x16\x02` \x81\x90\x1C\x82\x16`\xC0\x85\x01R\x16`\xA0\x83\x01Ra\x1A\x9DV[\x86c\xFF\xFF\xFF\xFF\x16`\x1A\x03a\x1AFW\x84`\x03\x0B\x86`\x03\x0B\x81a\x1A\x13Wa\x1A\x13a\x1D\xE5V[\x07c\xFF\xFF\xFF\xFF\x16`\xC0\x83\x01R`\x03\x85\x81\x0B\x90\x87\x90\x0B\x81a\x1A5Wa\x1A5a\x1D\xE5V[\x05c\xFF\xFF\xFF\xFF\x16`\xA0\x83\x01Ra\x1A\x9DV[\x86c\xFF\xFF\xFF\xFF\x16`\x1B\x03a\x1A\x9DW\x84c\xFF\xFF\xFF\xFF\x16\x86c\xFF\xFF\xFF\xFF\x16\x81a\x1AoWa\x1Aoa\x1D\xE5V[\x06c\xFF\xFF\xFF\xFF\x90\x81\x16`\xC0\x84\x01R\x85\x81\x16\x90\x87\x16\x81a\x1A\x90Wa\x1A\x90a\x1D\xE5V[\x04c\xFF\xFF\xFF\xFF\x16`\xA0\x83\x01R[c\xFF\xFF\xFF\xFF\x84\x16\x15a\x1A\xD8W\x80\x82a\x01`\x01Q\x85c\xFF\xFF\xFF\xFF\x16` \x81\x10a\x1A\xC7Wa\x1A\xC7a\x1D\x92V[c\xFF\xFF\xFF\xFF\x90\x92\x16` \x92\x90\x92\x02\x01R[`\x80\x82\x01\x80Qc\xFF\xFF\xFF\xFF\x80\x82\x16``\x86\x01R`\x04\x90\x91\x01\x16\x90Ra\x1A\xFBa\x06\x19V[\x97\x96PPPPPPPV[`\0a\x1B\x11\x83a\x1B\xAAV[\x90P`\x03\x84\x16\x15a\x1B!W`\0\x80\xFD[` \x81\x01\x90`\x1F\x85\x16`\x1C\x03`\x03\x1B\x83\x81\x1B\x915c\xFF\xFF\xFF\xFF\x90\x91\x1B\x19\x16\x17\x84`\x05\x1C`\0[`\x1B\x81\x10\x15a\x1B\x9FW` \x84\x01\x935\x82\x82\x1C`\x01\x16\x80\x15a\x1BoW`\x01\x81\x14a\x1B\x84Wa\x1B\x95V[`\0\x85\x81R` \x83\x90R`@\x90 \x94Pa\x1B\x95V[`\0\x82\x81R` \x86\x90R`@\x90 \x94P[PP`\x01\x01a\x1BGV[PP`\x80RPPPPV[`\xFF\x81\x16a\x03\x80\x02a\x01\x84\x81\x01\x906\x90a\x05\x04\x01\x81\x10\x15a\x1CMW`@Q\x7F\x08\xC3y\xA0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` `\x04\x82\x01R`#`$\x82\x01R\x7Fcheck that there is enough calld`D\x82\x01R\x7Fata\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`d\x82\x01R`\x84\x01a\x08{V[P\x91\x90PV[`@\x80Qa\x01\x80\x81\x01\x82R`\0\x80\x82R` \x82\x01\x81\x90R\x91\x81\x01\x82\x90R``\x81\x01\x82\x90R`\x80\x81\x01\x82\x90R`\xA0\x81\x01\x82\x90R`\xC0\x81\x01\x82\x90R`\xE0\x81\x01\x82\x90Ra\x01\0\x81\x01\x82\x90Ra\x01 \x81\x01\x82\x90Ra\x01@\x81\x01\x91\x90\x91Ra\x01`\x81\x01a\x1C\xB9a\x1C\xBEV[\x90R\x90V[`@Q\x80a\x04\0\x01`@R\x80` \x90` \x82\x02\x806\x837P\x91\x92\x91PPV[`\0\x80\x83`\x1F\x84\x01\x12a\x1C\xEFW`\0\x80\xFD[P\x815g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x15a\x1D\x07W`\0\x80\xFD[` \x83\x01\x91P\x83` \x82\x85\x01\x01\x11\x15a\x1D\x1FW`\0\x80\xFD[\x92P\x92\x90PV[`\0\x80`\0\x80`@\x85\x87\x03\x12\x15a\x1D<W`\0\x80\xFD[\x845g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\x82\x11\x15a\x1DTW`\0\x80\xFD[a\x1D`\x88\x83\x89\x01a\x1C\xDDV[\x90\x96P\x94P` \x87\x015\x91P\x80\x82\x11\x15a\x1DyW`\0\x80\xFD[Pa\x1D\x86\x87\x82\x88\x01a\x1C\xDDV[\x95\x98\x94\x97P\x95PPPPV[\x7FNH{q\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0R`2`\x04R`$`\0\xFD[`\0\x80`@\x83\x85\x03\x12\x15a\x1D\xD4W`\0\x80\xFD[PP\x80Q` \x90\x91\x01Q\x90\x92\x90\x91PV[\x7FNH{q\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0R`\x12`\x04R`$`\0\xFD\xFE\xA1dsolcC\0\x08\x0F\0\n";
    /// The bytecode of the contract.
    pub static MIPS_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __BYTECODE,
    );
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = b"`\x80`@R4\x80\x15a\0\x10W`\0\x80\xFD[P`\x046\x10a\0AW`\x005`\xE0\x1C\x80c\x15V3\xFE\x14a\0FW\x80c}\xC0\xD1\xD0\x14a\0kW\x80c\xF8\xE0\xCB\x96\x14a\0\xAFW[`\0\x80\xFD[a\0Qc@\0\0\0\x81V[`@Qc\xFF\xFF\xFF\xFF\x90\x91\x16\x81R` \x01[`@Q\x80\x91\x03\x90\xF3[`@Qs\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x7F\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x16\x81R` \x01a\0bV[a\0\xC2a\0\xBD6`\x04a\x1D&V[a\0\xD0V[`@Q\x90\x81R` \x01a\0bV[`\0a\0\xDAa\x1CSV[`\x80\x81\x14a\0\xE7W`\0\x80\xFD[`@Qa\x06\0\x14a\0\xF7W`\0\x80\xFD[`d\x86\x14a\x01\x04W`\0\x80\xFD[a\x01\x84\x84\x14a\x01\x12W`\0\x80\xFD[\x855`\x80R` \x86\x015`\xA0R`@\x86\x015`\xE0\x90\x81\x1C`\xC0\x90\x81R`D\x88\x015\x82\x1C\x82R`H\x88\x015\x82\x1Ca\x01\0R`L\x88\x015\x82\x1Ca\x01 R`P\x88\x015\x82\x1Ca\x01@R`T\x88\x015\x90\x91\x1Ca\x01`R`X\x87\x015`\xF8\x90\x81\x1Ca\x01\x80R`Y\x88\x015\x90\x1Ca\x01\xA0R`Z\x87\x015\x90\x1Ca\x01\xC0Ra\x02\0a\x01\xE0\x81\x90R`b\x87\x01\x90`\0[` \x81\x10\x15a\x01\xBDW\x825`\xE0\x1C\x82R`\x04\x90\x92\x01\x91` \x90\x91\x01\x90`\x01\x01a\x01\x99V[PPP\x80a\x01 \x01Q\x15a\x01\xDBWa\x01\xD3a\x06\x19V[\x91PPa\x06\x11V[a\x01@\x81\x01\x80Q`\x01\x01g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16\x90R``\x81\x01Q`\0\x90a\x02\x03\x90\x82a\x075V[\x90P`?`\x1A\x82\x90\x1C\x16`\x02\x81\x14\x80a\x02\"WP\x80c\xFF\xFF\xFF\xFF\x16`\x03\x14[\x15a\x02wW`\0`\x02\x83c\x03\xFF\xFF\xFF\x16c\xFF\xFF\xFF\xFF\x16\x90\x1B\x84`\x80\x01Qc\xF0\0\0\0\x16\x17\x90Pa\x02l\x82c\xFF\xFF\xFF\xFF\x16`\x02\x14a\x02`W`\x1Fa\x02cV[`\0[`\xFF\x16\x82a\x07\xF1V[\x94PPPPPa\x06\x11V[a\x01`\x83\x01Q`\0\x90\x81\x90`\x1F`\x10\x86\x90\x1C\x81\x16\x91\x90`\x15\x87\x90\x1C\x16` \x81\x10a\x02\xA3Wa\x02\xA3a\x1D\x92V[` \x02\x01Q\x92P\x80c\xFF\xFF\xFF\xFF\x85\x16\x15\x80a\x02\xC4WP\x84c\xFF\xFF\xFF\xFF\x16`\x1C\x14[\x15a\x02\xFBW\x86a\x01`\x01Q\x82c\xFF\xFF\xFF\xFF\x16` \x81\x10a\x02\xE6Wa\x02\xE6a\x1D\x92V[` \x02\x01Q\x92PP`\x1F`\x0B\x86\x90\x1C\x16a\x03\xB7V[` \x85c\xFF\xFF\xFF\xFF\x16\x10\x15a\x03]W\x84c\xFF\xFF\xFF\xFF\x16`\x0C\x14\x80a\x03%WP\x84c\xFF\xFF\xFF\xFF\x16`\r\x14[\x80a\x036WP\x84c\xFF\xFF\xFF\xFF\x16`\x0E\x14[\x15a\x03GW\x85a\xFF\xFF\x16\x92Pa\x03\xB7V[a\x03V\x86a\xFF\xFF\x16`\x10a\x08\xEBV[\x92Pa\x03\xB7V[`(\x85c\xFF\xFF\xFF\xFF\x16\x10\x15\x80a\x03yWP\x84c\xFF\xFF\xFF\xFF\x16`\"\x14[\x80a\x03\x8AWP\x84c\xFF\xFF\xFF\xFF\x16`&\x14[\x15a\x03\xB7W\x86a\x01`\x01Q\x82c\xFF\xFF\xFF\xFF\x16` \x81\x10a\x03\xACWa\x03\xACa\x1D\x92V[` \x02\x01Q\x92P\x81\x90P[`\x04\x85c\xFF\xFF\xFF\xFF\x16\x10\x15\x80\x15a\x03\xD4WP`\x08\x85c\xFF\xFF\xFF\xFF\x16\x10[\x80a\x03\xE5WP\x84c\xFF\xFF\xFF\xFF\x16`\x01\x14[\x15a\x04\x04Wa\x03\xF6\x85\x87\x84\x87a\t^V[\x97PPPPPPPPa\x06\x11V[c\xFF\xFF\xFF\xFF`\0` \x87\x83\x16\x10a\x04iWa\x04$\x88a\xFF\xFF\x16`\x10a\x08\xEBV[\x90\x95\x01\x94c\xFF\xFF\xFF\xFC\x86\x16a\x04:\x81`\x01a\x075V[\x91P`(\x88c\xFF\xFF\xFF\xFF\x16\x10\x15\x80\x15a\x04ZWP\x87c\xFF\xFF\xFF\xFF\x16`0\x14\x15[\x15a\x04gW\x80\x92P`\0\x93P[P[`\0a\x04w\x89\x88\x88\x85a\x0BnV[c\xFF\xFF\xFF\xFF\x90\x81\x16\x91P`?\x8A\x16\x90\x89\x16\x15\x80\x15a\x04\x9CWP`\x08\x81c\xFF\xFF\xFF\xFF\x16\x10\x15[\x80\x15a\x04\xAEWP`\x1C\x81c\xFF\xFF\xFF\xFF\x16\x10[\x15a\x05\x8AW\x80c\xFF\xFF\xFF\xFF\x16`\x08\x14\x80a\x04\xCEWP\x80c\xFF\xFF\xFF\xFF\x16`\t\x14[\x15a\x05\x05Wa\x04\xF3\x81c\xFF\xFF\xFF\xFF\x16`\x08\x14a\x04\xEAW\x85a\x04\xEDV[`\0[\x89a\x07\xF1V[\x9BPPPPPPPPPPPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\n\x03a\x05%Wa\x04\xF3\x85\x89c\xFF\xFF\xFF\xFF\x8A\x16\x15a\x12\xF2V[\x80c\xFF\xFF\xFF\xFF\x16`\x0B\x03a\x05FWa\x04\xF3\x85\x89c\xFF\xFF\xFF\xFF\x8A\x16\x15\x15a\x12\xF2V[\x80c\xFF\xFF\xFF\xFF\x16`\x0C\x03a\x05\\Wa\x04\xF3a\x13\xD8V[`\x10\x81c\xFF\xFF\xFF\xFF\x16\x10\x15\x80\x15a\x05yWP`\x1C\x81c\xFF\xFF\xFF\xFF\x16\x10[\x15a\x05\x8AWa\x04\xF3\x81\x89\x89\x88a\x19\x0CV[\x88c\xFF\xFF\xFF\xFF\x16`8\x14\x80\x15a\x05\xA5WPc\xFF\xFF\xFF\xFF\x86\x16\x15\x15[\x15a\x05\xDAW`\x01\x8Ba\x01`\x01Q\x87c\xFF\xFF\xFF\xFF\x16` \x81\x10a\x05\xC9Wa\x05\xC9a\x1D\x92V[c\xFF\xFF\xFF\xFF\x90\x92\x16` \x92\x90\x92\x02\x01R[\x83c\xFF\xFF\xFF\xFF\x16c\xFF\xFF\xFF\xFF\x14a\x05\xF7Wa\x05\xF7\x84`\x01\x84a\x1B\x06V[a\x06\x03\x85\x83`\x01a\x12\xF2V[\x9BPPPPPPPPPPPP[\x94\x93PPPPV[`@\x80Q`\x80Q\x81R`\xA0Q` \x82\x01R`\xDCQ\x91\x81\x01\x91\x90\x91R`\xFCQ`D\x82\x01Ra\x01\x1CQ`H\x82\x01Ra\x01<Q`L\x82\x01Ra\x01\\Q`P\x82\x01Ra\x01|Q`T\x82\x01Ra\x01\x80Qa\x01\x9FQ`X\x83\x01Ra\x01\xA0Qa\x01\xBFQ`Y\x84\x01Ra\x01\xD8Q`Z\x84\x01R`\0\x92a\x02\0\x92\x90\x91`b\x83\x01\x91\x90\x85[` \x81\x10\x15a\x06\xB8W`\x1C\x86\x01Q\x84R` \x90\x95\x01\x94`\x04\x90\x93\x01\x92`\x01\x01a\x06\x94V[P`\0\x83R\x83\x83\x03\x84\xA0`\0\x94P\x80`\x01\x81\x14a\x06\xD8W`\x03\x95Pa\x07\0V[\x82\x80\x15a\x06\xF0W`\x01\x81\x14a\x06\xF9W`\x02\x96Pa\x06\xFEV[`\0\x96Pa\x06\xFEV[`\x01\x96P[P[PPP\x81\x90\x03\x90 ~\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16`\xF8\x91\x90\x91\x1B\x17\x91\x90PV[`\0\x80a\x07A\x83a\x1B\xAAV[\x90P`\x03\x84\x16\x15a\x07QW`\0\x80\xFD[` \x81\x01\x905\x84`\x05\x1C\x81`\0[`\x1B\x81\x10\x15a\x07\xB7W` \x85\x01\x945\x83\x82\x1C`\x01\x16\x80\x15a\x07\x87W`\x01\x81\x14a\x07\x9CWa\x07\xADV[`\0\x84\x81R` \x83\x90R`@\x90 \x93Pa\x07\xADV[`\0\x82\x81R` \x85\x90R`@\x90 \x93P[PP`\x01\x01a\x07_V[P`\x80Q\x91P\x81\x81\x14a\x07\xD2Wc\x0B\xAD\xF0\r`\0R` `\0\xFD[PP`\x1F\x94\x90\x94\x16`\x1C\x03`\x03\x1B\x93\x90\x93\x1Cc\xFF\xFF\xFF\xFF\x16\x93\x92PPPV[`\0a\x07\xFBa\x1CSV[`\x80\x90P\x80``\x01Q`\x04\x01c\xFF\xFF\xFF\xFF\x16\x81`\x80\x01Qc\xFF\xFF\xFF\xFF\x16\x14a\x08\x84W`@Q\x7F\x08\xC3y\xA0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` `\x04\x82\x01R`\x12`$\x82\x01R\x7Fjump in delay slot\0\0\0\0\0\0\0\0\0\0\0\0\0\0`D\x82\x01R`d\x01[`@Q\x80\x91\x03\x90\xFD[``\x81\x01\x80Q`\x80\x83\x01\x80Qc\xFF\xFF\xFF\xFF\x90\x81\x16\x90\x93R\x85\x83\x16\x90R\x90\x85\x16\x15a\x08\xDAW\x80`\x08\x01\x82a\x01`\x01Q\x86c\xFF\xFF\xFF\xFF\x16` \x81\x10a\x08\xC9Wa\x08\xC9a\x1D\x92V[c\xFF\xFF\xFF\xFF\x90\x92\x16` \x92\x90\x92\x02\x01R[a\x08\xE2a\x06\x19V[\x95\x94PPPPPV[`\0c\xFF\xFF\xFF\xFF\x83\x81\x16\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\x85\x01\x83\x16\x91\x90\x91\x1C\x82\x16\x15\x15\x91`\x01` \x86\x90\x03\x82\x16\x81\x90\x1B\x83\x01\x91\x86\x16\x91\x82\x1B\x92\x91\x1B\x01\x82a\tHW`\0a\tJV[\x81[\x90\x86\x16c\xFF\xFF\xFF\xFF\x16\x17\x92PPP\x92\x91PPV[`\0a\tha\x1CSV[`\x80\x90P`\0\x81``\x01Q`\x04\x01c\xFF\xFF\xFF\xFF\x16\x82`\x80\x01Qc\xFF\xFF\xFF\xFF\x16\x14a\t\xEEW`@Q\x7F\x08\xC3y\xA0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` `\x04\x82\x01R`\x14`$\x82\x01R\x7Fbranch in delay slot\0\0\0\0\0\0\0\0\0\0\0\0`D\x82\x01R`d\x01a\x08{V[\x86c\xFF\xFF\xFF\xFF\x16`\x04\x14\x80a\n\tWP\x86c\xFF\xFF\xFF\xFF\x16`\x05\x14[\x15a\n\x85W`\0\x82a\x01`\x01Q\x86c\xFF\xFF\xFF\xFF\x16` \x81\x10a\n-Wa\n-a\x1D\x92V[` \x02\x01Q\x90P\x80c\xFF\xFF\xFF\xFF\x16\x85c\xFF\xFF\xFF\xFF\x16\x14\x80\x15a\nUWP\x87c\xFF\xFF\xFF\xFF\x16`\x04\x14[\x80a\n}WP\x80c\xFF\xFF\xFF\xFF\x16\x85c\xFF\xFF\xFF\xFF\x16\x14\x15\x80\x15a\n}WP\x87c\xFF\xFF\xFF\xFF\x16`\x05\x14[\x91PPa\x0B\x02V[\x86c\xFF\xFF\xFF\xFF\x16`\x06\x03a\n\xA2W`\0\x84`\x03\x0B\x13\x15\x90Pa\x0B\x02V[\x86c\xFF\xFF\xFF\xFF\x16`\x07\x03a\n\xBEW`\0\x84`\x03\x0B\x13\x90Pa\x0B\x02V[\x86c\xFF\xFF\xFF\xFF\x16`\x01\x03a\x0B\x02W`\x1F`\x10\x87\x90\x1C\x16`\0\x81\x90\x03a\n\xE7W`\0\x85`\x03\x0B\x12\x91P[\x80c\xFF\xFF\xFF\xFF\x16`\x01\x03a\x0B\0W`\0\x85`\x03\x0B\x12\x15\x91P[P[``\x82\x01\x80Q`\x80\x84\x01Qc\xFF\xFF\xFF\xFF\x16\x90\x91R\x81\x15a\x0BHW`\x02a\x0B-\x88a\xFF\xFF\x16`\x10a\x08\xEBV[c\xFF\xFF\xFF\xFF\x90\x81\x16\x90\x91\x1B\x82\x01`\x04\x01\x16`\x80\x84\x01Ra\x0BZV[`\x80\x83\x01\x80Q`\x04\x01c\xFF\xFF\xFF\xFF\x16\x90R[a\x0Bba\x06\x19V[\x98\x97PPPPPPPPV[`\0`?`\x1A\x86\x90\x1C\x16\x80\x15\x80a\x0B\x9DWP`\x08\x81c\xFF\xFF\xFF\xFF\x16\x10\x15\x80\x15a\x0B\x9DWP`\x0F\x81c\xFF\xFF\xFF\xFF\x16\x10[\x15a\x0F\xF3W`?\x86\x16\x81`\x08\x81\x14a\x0B\xE4W`\t\x81\x14a\x0B\xEDW`\n\x81\x14a\x0B\xF6W`\x0B\x81\x14a\x0B\xFFW`\x0C\x81\x14a\x0C\x08W`\r\x81\x14a\x0C\x11W`\x0E\x81\x14a\x0C\x1AWa\x0C\x1FV[` \x91Pa\x0C\x1FV[`!\x91Pa\x0C\x1FV[`*\x91Pa\x0C\x1FV[`+\x91Pa\x0C\x1FV[`$\x91Pa\x0C\x1FV[`%\x91Pa\x0C\x1FV[`&\x91P[P\x80c\xFF\xFF\xFF\xFF\x16`\0\x03a\x0CFWPPPc\xFF\xFF\xFF\xFF\x82\x16`\x1F`\x06\x86\x90\x1C\x16\x1Ba\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x02\x03a\x0ClWPPPc\xFF\xFF\xFF\xFF\x82\x16`\x1F`\x06\x86\x90\x1C\x16\x1Ca\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x03\x03a\x0C\xA2W`\x1F`\x06\x88\x90\x1C\x16a\x0C\x98c\xFF\xFF\xFF\xFF\x87\x16\x82\x1C` \x83\x90\x03a\x08\xEBV[\x93PPPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x04\x03a\x0C\xC4WPPPc\xFF\xFF\xFF\xFF\x82\x16`\x1F\x84\x16\x1Ba\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x06\x03a\x0C\xE6WPPPc\xFF\xFF\xFF\xFF\x82\x16`\x1F\x84\x16\x1Ca\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x07\x03a\r\x19Wa\r\x10\x86c\xFF\xFF\xFF\xFF\x16\x86c\xFF\xFF\xFF\xFF\x16\x90\x1C\x87` \x03a\x08\xEBV[\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x08\x03a\r1W\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\t\x03a\rIW\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\n\x03a\raW\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x0B\x03a\ryW\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x0C\x03a\r\x91W\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x0F\x03a\r\xA9W\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x10\x03a\r\xC1W\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x11\x03a\r\xD9W\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x12\x03a\r\xF1W\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x13\x03a\x0E\tW\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x18\x03a\x0E!W\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x19\x03a\x0E9W\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x1A\x03a\x0EQW\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\x1B\x03a\x0EiW\x85\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16` \x03a\x0E\x82WPPP\x82\x82\x01a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`!\x03a\x0E\x9BWPPP\x82\x82\x01a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`\"\x03a\x0E\xB4WPPP\x81\x83\x03a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`#\x03a\x0E\xCDWPPP\x81\x83\x03a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`$\x03a\x0E\xE6WPPP\x82\x82\x16a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`%\x03a\x0E\xFFWPPP\x82\x82\x17a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`&\x03a\x0F\x18WPPP\x82\x82\x18a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`'\x03a\x0F2WPPP\x82\x82\x17\x19a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`*\x03a\x0FcW\x84`\x03\x0B\x86`\x03\x0B\x12a\x0FTW`\0a\x0FWV[`\x01[`\xFF\x16\x92PPPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`+\x03a\x0F\x8BW\x84c\xFF\xFF\xFF\xFF\x16\x86c\xFF\xFF\xFF\xFF\x16\x10a\x0FTW`\0a\x0FWV[`@Q\x7F\x08\xC3y\xA0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` `\x04\x82\x01R`\x13`$\x82\x01R\x7Finvalid instruction\0\0\0\0\0\0\0\0\0\0\0\0\0`D\x82\x01R`d\x01a\x08{V[Pa\x0F\x8BV[\x80c\xFF\xFF\xFF\xFF\x16`\x1C\x03a\x10wW`?\x86\x16`\x02\x81\x90\x03a\x10\x19WPPP\x82\x82\x02a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16` \x14\x80a\x104WP\x80c\xFF\xFF\xFF\xFF\x16`!\x14[\x15a\x0F\xEDW\x80c\xFF\xFF\xFF\xFF\x16` \x03a\x10KW\x94\x19\x94[`\0[c\x80\0\0\0\x87\x16\x15a\x10mWd\x01\xFF\xFF\xFF\xFE`\x01\x97\x88\x1B\x16\x96\x01a\x10NV[\x92Pa\x06\x11\x91PPV[\x80c\xFF\xFF\xFF\xFF\x16`\x0F\x03a\x10\x99WPPe\xFF\xFF\xFF\xFF\0\0`\x10\x83\x90\x1B\x16a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16` \x03a\x10\xCDWa\x01\xD3\x85`\x03\x16`\x08\x02`\x18\x03c\xFF\xFF\xFF\xFF\x16\x84c\xFF\xFF\xFF\xFF\x16\x90\x1C`\xFF\x16`\x08a\x08\xEBV[\x80c\xFF\xFF\xFF\xFF\x16`!\x03a\x11\x02Wa\x01\xD3\x85`\x02\x16`\x08\x02`\x10\x03c\xFF\xFF\xFF\xFF\x16\x84c\xFF\xFF\xFF\xFF\x16\x90\x1Ca\xFF\xFF\x16`\x10a\x08\xEBV[\x80c\xFF\xFF\xFF\xFF\x16`\"\x03a\x111WPPc\xFF\xFF\xFF\xFF`\x08`\x03\x85\x16\x02\x81\x16\x81\x81\x1B\x19\x84\x16\x91\x83\x16\x90\x1B\x17a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`#\x03a\x11HW\x82\x91PPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`$\x03a\x11zW\x84`\x03\x16`\x08\x02`\x18\x03c\xFF\xFF\xFF\xFF\x16\x83c\xFF\xFF\xFF\xFF\x16\x90\x1C`\xFF\x16\x91PPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`%\x03a\x11\xADW\x84`\x02\x16`\x08\x02`\x10\x03c\xFF\xFF\xFF\xFF\x16\x83c\xFF\xFF\xFF\xFF\x16\x90\x1Ca\xFF\xFF\x16\x91PPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`&\x03a\x11\xDFWPPc\xFF\xFF\xFF\xFF`\x08`\x03\x85\x16\x02`\x18\x03\x81\x16\x81\x81\x1C\x19\x84\x16\x91\x83\x16\x90\x1C\x17a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`(\x03a\x12\x15WPP`\xFFc\xFF\xFF\xFF\xFF`\x08`\x03\x86\x16\x02`\x18\x03\x81\x16\x82\x81\x1B\x90\x91\x18\x83\x16\x91\x84\x16\x90\x1B\x17a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`)\x03a\x12LWPPa\xFF\xFFc\xFF\xFF\xFF\xFF`\x08`\x02\x86\x16\x02`\x10\x03\x81\x16\x82\x81\x1B\x90\x91\x18\x83\x16\x91\x84\x16\x90\x1B\x17a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`*\x03a\x12{WPPc\xFF\xFF\xFF\xFF`\x08`\x03\x85\x16\x02\x81\x16\x81\x81\x1C\x19\x83\x16\x91\x84\x16\x90\x1C\x17a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`+\x03a\x12\x92W\x83\x91PPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`.\x03a\x12\xC4WPPc\xFF\xFF\xFF\xFF`\x08`\x03\x85\x16\x02`\x18\x03\x81\x16\x81\x81\x1B\x19\x83\x16\x91\x84\x16\x90\x1B\x17a\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`0\x03a\x12\xDBW\x82\x91PPa\x06\x11V[\x80c\xFF\xFF\xFF\xFF\x16`8\x03a\x0F\x8BW\x83\x91PPa\x06\x11V[`\0a\x12\xFCa\x1CSV[P`\x80` c\xFF\xFF\xFF\xFF\x86\x16\x10a\x13oW`@Q\x7F\x08\xC3y\xA0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` `\x04\x82\x01R`\x0E`$\x82\x01R\x7Fvalid register\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`D\x82\x01R`d\x01a\x08{V[c\xFF\xFF\xFF\xFF\x85\x16\x15\x80\x15\x90a\x13\x81WP\x82[\x15a\x13\xB5W\x83\x81a\x01`\x01Q\x86c\xFF\xFF\xFF\xFF\x16` \x81\x10a\x13\xA4Wa\x13\xA4a\x1D\x92V[c\xFF\xFF\xFF\xFF\x90\x92\x16` \x92\x90\x92\x02\x01R[`\x80\x81\x01\x80Qc\xFF\xFF\xFF\xFF\x80\x82\x16``\x85\x01R`\x04\x90\x91\x01\x16\x90Ra\x08\xE2a\x06\x19V[`\0a\x13\xE2a\x1CSV[Pa\x01\xE0Q`@\x81\x01Q`\x80\x80\x83\x01Q`\xA0\x84\x01Q`\xC0\x90\x94\x01Q\x91\x93`\0\x92\x83\x92\x91\x90c\xFF\xFF\xFF\xFF\x86\x16a\x0F\xFA\x03a\x14\\W\x81a\x0F\xFF\x81\x16\x15a\x14+Wa\x0F\xFF\x81\x16a\x10\0\x03\x01[\x83c\xFF\xFF\xFF\xFF\x16`\0\x03a\x14RW`\xE0\x88\x01\x80Qc\xFF\xFF\xFF\xFF\x83\x82\x01\x16\x90\x91R\x95Pa\x14VV[\x83\x95P[Pa\x18\xCBV[\x85c\xFF\xFF\xFF\xFF\x16a\x0F\xCD\x03a\x14wWc@\0\0\0\x94Pa\x18\xCBV[\x85c\xFF\xFF\xFF\xFF\x16a\x10\x18\x03a\x14\x8FW`\x01\x94Pa\x18\xCBV[\x85c\xFF\xFF\xFF\xFF\x16a\x10\x96\x03a\x14\xC4W`\x01a\x01 \x88\x01R`\xFF\x83\x16a\x01\0\x88\x01Ra\x14\xB8a\x06\x19V[\x97PPPPPPPP\x90V[\x85c\xFF\xFF\xFF\xFF\x16a\x0F\xA3\x03a\x17.Wc\xFF\xFF\xFF\xFF\x83\x16\x15a\x18\xCBW\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFBc\xFF\xFF\xFF\xFF\x84\x16\x01a\x16\xE8W`\0a\x15\x1F\x83c\xFF\xFF\xFF\xFC\x16`\x01a\x075V[` \x89\x01Q\x90\x91P\x80`\0\x1A`\x01\x03a\x15\x8CWa\x15\x89\x81`\0\x90\x81R3` R`@\x90 ~\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16\x7F\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x17\x90V[\x90P[`@\x80\x8A\x01Q\x90Q\x7F\xE01\x10\xE1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R`\x04\x81\x01\x83\x90Rc\xFF\xFF\xFF\xFF\x90\x91\x16`$\x82\x01R`\0\x90\x81\x90s\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x7F\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x16\x90c\xE01\x10\xE1\x90`D\x01`@\x80Q\x80\x83\x03\x81\x86Z\xFA\x15\x80\x15a\x16-W=`\0\x80>=`\0\xFD[PPPP`@Q=`\x1F\x19`\x1F\x82\x01\x16\x82\x01\x80`@RP\x81\x01\x90a\x16Q\x91\x90a\x1D\xC1V[\x91P\x91P`\x03\x86\x16\x80`\x04\x03\x82\x81\x10\x15a\x16iW\x80\x92P[P\x81\x86\x10\x15a\x16vW\x85\x91P[\x82`\x08\x83\x02a\x01\0\x03\x1C\x92P\x82`\x08\x82\x84`\x04\x03\x03\x02\x1B\x92P`\x01\x80`\x08\x83`\x04\x03\x02\x1B\x03`\x01\x80`\x08\x85\x85`\x04\x03\x03\x02\x1B\x03\x91P\x81\x19\x81\x16\x90P\x83\x81\x19\x87\x16\x17\x95PPPa\x16\xCD\x86c\xFF\xFF\xFF\xFC\x16`\x01\x86a\x1B\x06V[`@\x8B\x01\x80Q\x82\x01c\xFF\xFF\xFF\xFF\x16\x90R\x97Pa\x17)\x92PPPV[\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFDc\xFF\xFF\xFF\xFF\x84\x16\x01a\x17\x1DW\x80\x94Pa\x18\xCBV[c\xFF\xFF\xFF\xFF\x94P`\t\x93P[a\x18\xCBV[\x85c\xFF\xFF\xFF\xFF\x16a\x0F\xA4\x03a\x18\x1FWc\xFF\xFF\xFF\xFF\x83\x16`\x01\x14\x80a\x17XWPc\xFF\xFF\xFF\xFF\x83\x16`\x02\x14[\x80a\x17iWPc\xFF\xFF\xFF\xFF\x83\x16`\x04\x14[\x15a\x17vW\x80\x94Pa\x18\xCBV[\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFAc\xFF\xFF\xFF\xFF\x84\x16\x01a\x17\x1DW`\0a\x17\xB6\x83c\xFF\xFF\xFF\xFC\x16`\x01a\x075V[` \x89\x01Q\x90\x91P`\x03\x84\x16`\x04\x03\x83\x81\x10\x15a\x17\xD1W\x80\x93P[\x83\x90\x03`\x08\x90\x81\x02\x92\x90\x92\x1C\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF`\x01\x93\x85\x02\x93\x84\x1B\x01\x16\x91\x1B\x17` \x88\x01R`\0`@\x88\x01R\x93P\x83a\x18\xCBV[\x85c\xFF\xFF\xFF\xFF\x16a\x0F\xD7\x03a\x18\xCBW\x81c\xFF\xFF\xFF\xFF\x16`\x03\x03a\x18\xBFWc\xFF\xFF\xFF\xFF\x83\x16\x15\x80a\x18UWPc\xFF\xFF\xFF\xFF\x83\x16`\x05\x14[\x80a\x18fWPc\xFF\xFF\xFF\xFF\x83\x16`\x03\x14[\x15a\x18tW`\0\x94Pa\x18\xCBV[c\xFF\xFF\xFF\xFF\x83\x16`\x01\x14\x80a\x18\x8FWPc\xFF\xFF\xFF\xFF\x83\x16`\x02\x14[\x80a\x18\xA0WPc\xFF\xFF\xFF\xFF\x83\x16`\x06\x14[\x80a\x18\xB1WPc\xFF\xFF\xFF\xFF\x83\x16`\x04\x14[\x15a\x17\x1DW`\x01\x94Pa\x18\xCBV[c\xFF\xFF\xFF\xFF\x94P`\x16\x93P[a\x01`\x87\x01\x80Qc\xFF\xFF\xFF\xFF\x80\x88\x16`@\x90\x92\x01\x91\x90\x91R\x90Q\x85\x82\x16`\xE0\x90\x91\x01R`\x80\x88\x01\x80Q\x80\x83\x16``\x8B\x01R`\x04\x01\x90\x91\x16\x90Ra\x14\xB8a\x06\x19V[`\0a\x19\x16a\x1CSV[P`\x80`\0c\xFF\xFF\xFF\xFF\x87\x16`\x10\x03a\x194WP`\xC0\x81\x01Qa\x1A\x9DV[\x86c\xFF\xFF\xFF\xFF\x16`\x11\x03a\x19SWc\xFF\xFF\xFF\xFF\x86\x16`\xC0\x83\x01Ra\x1A\x9DV[\x86c\xFF\xFF\xFF\xFF\x16`\x12\x03a\x19lWP`\xA0\x81\x01Qa\x1A\x9DV[\x86c\xFF\xFF\xFF\xFF\x16`\x13\x03a\x19\x8BWc\xFF\xFF\xFF\xFF\x86\x16`\xA0\x83\x01Ra\x1A\x9DV[\x86c\xFF\xFF\xFF\xFF\x16`\x18\x03a\x19\xBFWc\xFF\xFF\xFF\xFF`\x03\x87\x81\x0B\x90\x87\x90\x0B\x02` \x81\x90\x1C\x82\x16`\xC0\x85\x01R\x16`\xA0\x83\x01Ra\x1A\x9DV[\x86c\xFF\xFF\xFF\xFF\x16`\x19\x03a\x19\xF0Wc\xFF\xFF\xFF\xFF\x86\x81\x16\x81\x87\x16\x02` \x81\x90\x1C\x82\x16`\xC0\x85\x01R\x16`\xA0\x83\x01Ra\x1A\x9DV[\x86c\xFF\xFF\xFF\xFF\x16`\x1A\x03a\x1AFW\x84`\x03\x0B\x86`\x03\x0B\x81a\x1A\x13Wa\x1A\x13a\x1D\xE5V[\x07c\xFF\xFF\xFF\xFF\x16`\xC0\x83\x01R`\x03\x85\x81\x0B\x90\x87\x90\x0B\x81a\x1A5Wa\x1A5a\x1D\xE5V[\x05c\xFF\xFF\xFF\xFF\x16`\xA0\x83\x01Ra\x1A\x9DV[\x86c\xFF\xFF\xFF\xFF\x16`\x1B\x03a\x1A\x9DW\x84c\xFF\xFF\xFF\xFF\x16\x86c\xFF\xFF\xFF\xFF\x16\x81a\x1AoWa\x1Aoa\x1D\xE5V[\x06c\xFF\xFF\xFF\xFF\x90\x81\x16`\xC0\x84\x01R\x85\x81\x16\x90\x87\x16\x81a\x1A\x90Wa\x1A\x90a\x1D\xE5V[\x04c\xFF\xFF\xFF\xFF\x16`\xA0\x83\x01R[c\xFF\xFF\xFF\xFF\x84\x16\x15a\x1A\xD8W\x80\x82a\x01`\x01Q\x85c\xFF\xFF\xFF\xFF\x16` \x81\x10a\x1A\xC7Wa\x1A\xC7a\x1D\x92V[c\xFF\xFF\xFF\xFF\x90\x92\x16` \x92\x90\x92\x02\x01R[`\x80\x82\x01\x80Qc\xFF\xFF\xFF\xFF\x80\x82\x16``\x86\x01R`\x04\x90\x91\x01\x16\x90Ra\x1A\xFBa\x06\x19V[\x97\x96PPPPPPPV[`\0a\x1B\x11\x83a\x1B\xAAV[\x90P`\x03\x84\x16\x15a\x1B!W`\0\x80\xFD[` \x81\x01\x90`\x1F\x85\x16`\x1C\x03`\x03\x1B\x83\x81\x1B\x915c\xFF\xFF\xFF\xFF\x90\x91\x1B\x19\x16\x17\x84`\x05\x1C`\0[`\x1B\x81\x10\x15a\x1B\x9FW` \x84\x01\x935\x82\x82\x1C`\x01\x16\x80\x15a\x1BoW`\x01\x81\x14a\x1B\x84Wa\x1B\x95V[`\0\x85\x81R` \x83\x90R`@\x90 \x94Pa\x1B\x95V[`\0\x82\x81R` \x86\x90R`@\x90 \x94P[PP`\x01\x01a\x1BGV[PP`\x80RPPPPV[`\xFF\x81\x16a\x03\x80\x02a\x01\x84\x81\x01\x906\x90a\x05\x04\x01\x81\x10\x15a\x1CMW`@Q\x7F\x08\xC3y\xA0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x81R` `\x04\x82\x01R`#`$\x82\x01R\x7Fcheck that there is enough calld`D\x82\x01R\x7Fata\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`d\x82\x01R`\x84\x01a\x08{V[P\x91\x90PV[`@\x80Qa\x01\x80\x81\x01\x82R`\0\x80\x82R` \x82\x01\x81\x90R\x91\x81\x01\x82\x90R``\x81\x01\x82\x90R`\x80\x81\x01\x82\x90R`\xA0\x81\x01\x82\x90R`\xC0\x81\x01\x82\x90R`\xE0\x81\x01\x82\x90Ra\x01\0\x81\x01\x82\x90Ra\x01 \x81\x01\x82\x90Ra\x01@\x81\x01\x91\x90\x91Ra\x01`\x81\x01a\x1C\xB9a\x1C\xBEV[\x90R\x90V[`@Q\x80a\x04\0\x01`@R\x80` \x90` \x82\x02\x806\x837P\x91\x92\x91PPV[`\0\x80\x83`\x1F\x84\x01\x12a\x1C\xEFW`\0\x80\xFD[P\x815g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x81\x11\x15a\x1D\x07W`\0\x80\xFD[` \x83\x01\x91P\x83` \x82\x85\x01\x01\x11\x15a\x1D\x1FW`\0\x80\xFD[\x92P\x92\x90PV[`\0\x80`\0\x80`@\x85\x87\x03\x12\x15a\x1D<W`\0\x80\xFD[\x845g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\x82\x11\x15a\x1DTW`\0\x80\xFD[a\x1D`\x88\x83\x89\x01a\x1C\xDDV[\x90\x96P\x94P` \x87\x015\x91P\x80\x82\x11\x15a\x1DyW`\0\x80\xFD[Pa\x1D\x86\x87\x82\x88\x01a\x1C\xDDV[\x95\x98\x94\x97P\x95PPPPV[\x7FNH{q\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0R`2`\x04R`$`\0\xFD[`\0\x80`@\x83\x85\x03\x12\x15a\x1D\xD4W`\0\x80\xFD[PP\x80Q` \x90\x91\x01Q\x90\x92\x90\x91PV[\x7FNH{q\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0R`\x12`\x04R`$`\0\xFD\xFE\xA1dsolcC\0\x08\x0F\0\n";
    /// The deployed bytecode of the contract.
    pub static MIPS_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __DEPLOYED_BYTECODE,
    );
    pub struct MIPS<M>(::ethers::contract::Contract<M>);
    impl<M> ::core::clone::Clone for MIPS<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for MIPS<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for MIPS<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for MIPS<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(::core::stringify!(MIPS)).field(&self.address()).finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> MIPS<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(
                ::ethers::contract::Contract::new(
                    address.into(),
                    MIPS_ABI.clone(),
                    client,
                ),
            )
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                MIPS_ABI.clone(),
                MIPS_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `BRK_START` (0x155633fe) function
        pub fn brk_start(&self) -> ::ethers::contract::builders::ContractCall<M, u32> {
            self.0
                .method_hash([21, 86, 51, 254], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `oracle` (0x7dc0d1d0) function
        pub fn oracle(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([125, 192, 209, 208], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `step` (0xf8e0cb96) function
        pub fn step(
            &self,
            state_data: ::ethers::core::types::Bytes,
            proof: ::ethers::core::types::Bytes,
        ) -> ::ethers::contract::builders::ContractCall<M, [u8; 32]> {
            self.0
                .method_hash([248, 224, 203, 150], (state_data, proof))
                .expect("method not found (this should never happen)")
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>>
    for MIPS<M> {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    ///Container type for all input parameters for the `BRK_START` function with signature `BRK_START()` and selector `0x155633fe`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "BRK_START", abi = "BRK_START()")]
    pub struct BrkStartCall;
    ///Container type for all input parameters for the `oracle` function with signature `oracle()` and selector `0x7dc0d1d0`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "oracle", abi = "oracle()")]
    pub struct OracleCall;
    ///Container type for all input parameters for the `step` function with signature `step(bytes,bytes)` and selector `0xf8e0cb96`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "step", abi = "step(bytes,bytes)")]
    pub struct StepCall {
        pub state_data: ::ethers::core::types::Bytes,
        pub proof: ::ethers::core::types::Bytes,
    }
    ///Container type for all of the contract's call
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum MIPSCalls {
        BrkStart(BrkStartCall),
        Oracle(OracleCall),
        Step(StepCall),
    }
    impl ::ethers::core::abi::AbiDecode for MIPSCalls {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded) = <BrkStartCall as ::ethers::core::abi::AbiDecode>::decode(
                data,
            ) {
                return Ok(Self::BrkStart(decoded));
            }
            if let Ok(decoded) = <OracleCall as ::ethers::core::abi::AbiDecode>::decode(
                data,
            ) {
                return Ok(Self::Oracle(decoded));
            }
            if let Ok(decoded) = <StepCall as ::ethers::core::abi::AbiDecode>::decode(
                data,
            ) {
                return Ok(Self::Step(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for MIPSCalls {
        fn encode(self) -> Vec<u8> {
            match self {
                Self::BrkStart(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Oracle(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::Step(element) => ::ethers::core::abi::AbiEncode::encode(element),
            }
        }
    }
    impl ::core::fmt::Display for MIPSCalls {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::BrkStart(element) => ::core::fmt::Display::fmt(element, f),
                Self::Oracle(element) => ::core::fmt::Display::fmt(element, f),
                Self::Step(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<BrkStartCall> for MIPSCalls {
        fn from(value: BrkStartCall) -> Self {
            Self::BrkStart(value)
        }
    }
    impl ::core::convert::From<OracleCall> for MIPSCalls {
        fn from(value: OracleCall) -> Self {
            Self::Oracle(value)
        }
    }
    impl ::core::convert::From<StepCall> for MIPSCalls {
        fn from(value: StepCall) -> Self {
            Self::Step(value)
        }
    }
    ///Container type for all return fields from the `BRK_START` function with signature `BRK_START()` and selector `0x155633fe`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct BrkStartReturn(pub u32);
    ///Container type for all return fields from the `oracle` function with signature `oracle()` and selector `0x7dc0d1d0`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct OracleReturn {
        pub oracle: ::ethers::core::types::Address,
    }
    ///Container type for all return fields from the `step` function with signature `step(bytes,bytes)` and selector `0xf8e0cb96`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct StepReturn(pub [u8; 32]);
}
